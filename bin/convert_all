#!/home/max/.rbenv/shims/ruby

NICE_PRIORITY = 10
# CPU_LIMIT = 50

CONVERSIONS = {
  "avi" => "mp4",
  "mkv" => "mp4",
  "sub" => "vtt",
  "srt" => "vtt"
}

#SRC_DIR = "/media/max/media/Movies/ALL"
# CONVERT_DIR = File.expand_path("~/Videos/Convert")

SRC_DIR = "/mnt/share/Movies"

def run_cmd(cmd)
  return if ENV["DRY"]&.downcase == "true"
  puts cmd
  `#{cmd}`
end

# `mkdir #{CONVERT_DIR}` unless File.directory?(CONVERT_DIR)

CONVERSIONS.each do |src_ext, dest_ext|
  to_convert = Dir.glob("#{SRC_DIR}/**/*.#{src_ext}")
  puts "\n\nEXT: #{src_ext} => #{dest_ext}: WILL CONVERT: \n\n\n#{to_convert.join("\n")}" 

  to_convert.each.with_index do |orig_path, idx|
    filename = File.basename(orig_path)

 #   tmp_convert_path = "#{CONVERT_DIR}/#{filename}"
 #   run_cmd <<-TXT
 #     mv "#{orig_path}" "#{tmp_convert_path}"
 #   TXT

    dest_convert_path = "#{orig_path.gsub(".#{src_ext}", ".#{dest_ext}")}"
    # Note: this is REALLY processor intensive.
    # Uses `nice` and `cpulimit` to prevent performance degredation.
    if src_ext == "mkv"
      run_cmd <<-TXT
        nice -n #{NICE_PRIORITY} ffmpeg -i "#{orig_path}" -codec copy "#{dest_convert_path}"
      TXT
    else
      run_cmd <<-TXT
        nice -n #{NICE_PRIORITY} ffmpeg -i "#{orig_path}" "#{dest_convert_path}"
      TXT
    end

#    run_cmd <<-TXT
#      mv "#{dest_convert_path}" "#{File.dirname(orig_path)}"
#    TXT

    if File.exists?(orig_path.gsub(".#{src_ext}", ".#{dest_ext}"))
      run_cmd <<-TXT
        rm "#{orig_path}"
      TXT
    end
  end
end

